This chapter is focused on arrays and strings, fundamentally the same thing. Many questions about array operations are asked to test knowledge on time and space complexity. In this chapter, things like lists, vectors, ArrayLists, etc. are all categorized as arrays considering that they are accessed by integer indexing and accessing takes O(1) time complexity (regardless of the dynamic nature of their space allocation). It is beneficial to recognize that a lot of these problems are meant to be solved in place to minimize space complexity and should leverage the use of data structures when neccessary, particularly Hash Tables to minimize time complexity. 

Working with 1-D arrays seem to typically max out at O(N^2) time complexity, but certain algorithms can be performed in O(log n) time depending on the assumptions behind the data. For instance, in order to find if an element is contained within an array, it typically would be O(N) time complexity, but with knowledge that the array was sorted, the complexity could be minimied to O(log N) time complexity with a binary search.
